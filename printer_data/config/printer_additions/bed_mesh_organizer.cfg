; Bed Mesh Organizer
; Part of CV's Klipper Printer Additions.
;   
;   
;   Support
;   â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢
;     If my work supports you, you might like to support me too.
;   â€¢ PayPal: https://www.paypal.com/paypalme/Morgennebel/
;     
;     
;     When you buy something, please use my Referal-Link, at no additional cost:
;   â€¢ AliExpress: https://s.click.aliexpress.com/e/_De0Vu1h
;   â€¢ Amazon: https://amzn.to/3L35OX2
;     
;     Thank you!
;     Christian ðŸ™‚

[delayed_gcode _startup_check_bed_mesh_organizer]
initial_duration: 3.11
gcode:

  {% set module_version = "3.0b9.1" %} 
    _Module_loaded_add NAME="Bed Mesh Organizer" VERSION="{module_version}"

[gcode_macro Mesh_Organizer]
description: KPA Button. Delete all bed meshes whose names contain the string you've entered in the button's input field.
gcode:
  {% set myname = "Mesh_Organizer" %}

  {% set varis = printer["gcode_macro _varis"] %}

  {% set subS = params.SEARCH|default("Rename Meshes")|string %}
  {% set subR = params.REPLACE|default("Rename Meshes")|string %}
  {% set subD = params.SEARCH_DELETE_MESHES|default("Delete Meshes")|string %}

  {% if (subD != "Delete Meshes") and (subS != "Rename Meshes" or subR != "Rename Meshes") %}

    {action_respond_info("To delete bed meshes empty the search & replace fields.")} 

  {% elif (subS == "Rename Meshes") and (subR != "Rename Meshes")%}
    {action_respond_info("Please enter a search string to replace.")} 

  {% elif subS != "Rename Meshes" and (subS == subR) %}
    {action_respond_info("Search- and Replace strings are the same.")} 

  {% elif (subS != "Rename Meshes") %}
    {% if subR == "Rename Meshes" %}  {% set subR = "" %}  {% endif %} 
    {% set subR = subR.replace(" ", "_")%}

    {% for mesh_name in printer.bed_mesh.profiles %}

      {% if (subS in mesh_name) %}

        {% set namenew = mesh_name.replace(subS, subR)%}
        {% set namenew = namenew.replace(" ", "_")%}
        {action_respond_info("Old Name: '"+mesh_name+"' 
        New Name: '"+namenew+"'")}

        BED_MESH_PROFILE LOAD="{mesh_name}"
        BED_MESH_PROFILE SAVE="{namenew}"
        BED_MESH_PROFILE REMOVE="{mesh_name}"
      {% endif %}
    {% endfor %}

    _Mesh_Organizer_Show

  {% elif (subR == "Rename Meshes") and (subD != "Delete Meshes") %} 

    {% for mesh_name in printer.bed_mesh.profiles  %}

      {% if (subD.lower() in mesh_name.lower()) %}

        {action_respond_info("'"+subD+"' found in '"+mesh_name+"'. Deleting mesh.")}
        BED_MESH_PROFILE REMOVE={mesh_name}
      {% endif %}
    {% endfor %}

    _Mesh_Organizer_Show

  {% else %} 

    {% if varis.button_clicked_name != myname %} 

      _Mesh_Organizer_Show

    {% else %} 
      {action_respond_info("Saving renamed bed meshes... Restarting...")}
      SAVE_CONFIG
    {% endif %}

    _UI_Button_Clicked NAME={myname}

  {% endif %}

[gcode_macro _Mesh_Organizer_Show]
gcode:

  {% set varis = printer["gcode_macro _varis"] %}

  {% set pre = "Current bed meshes:
  |...Mesh Info....| Name
  " %}

  {% set li = namespace() %}
  {% set li = [] %}
  {% for item in printer.bed_mesh.profiles  %}
    {% set foo = li.append(item) %}
  {% endfor %}

  {% set li = li|sort() %}

  {% set li2 = namespace() %}
  {% set li2 = [] %}
  {% for item in li %}
    {% set mesh_name = item %}

    {% set algo       = printer.bed_mesh.profiles[mesh_name].mesh_params.algo %}
    {% set mesh_x_pps = printer.bed_mesh.profiles[mesh_name].mesh_params.mesh_x_pps %}
    {% set mesh_y_pps = printer.bed_mesh.profiles[mesh_name].mesh_params.mesh_y_pps %}
    {% set tension    = printer.bed_mesh.profiles[mesh_name].mesh_params.tension %}

    {% set algo = algo[:3] %}
    {% set tension = (tension|string + "000")[:4]|string %}

    {% set app = "|"+algo|string + "â€¢T:"+tension|string + "â€¢P:"+mesh_x_pps|string + ","+mesh_y_pps|string + "| " %}
    {% set app = app + mesh_name %}
    {% set foo = li2.append(app) %}
  {% endfor %}

  {% set meshLiStr = "" if li2|length == 0 else li2|join('\n') + "\n" %}

  {% set suff = "

  HOW TO
  â€¢ Click this button once to show a compact list of the current bed meshes.
  â€¢ Click this button twice within 5 seconds, to finally save your changes (Klipper will restart).
  â€¢ If you did something wrong, just restart the firmware, and your previous meshes / mesh names are back.

  RENAME Bed Meshes
  â€¢ Enter the SEARCH string and the REPLACE-string into the first two input-fields.
  Every mesh which name contains the SEARCH-string will be renamed. The REPLACE-string will only replace the SEARCH-string in the name of the found meshes.
  Character case matters. If the search-string occurs multiple times in a mesh name, all occurences will be replaced.

  DELETE Bed Meshes
  â€¢ Enter a SEARCH string into the third input-field.
  Every mesh which name contains the SEARCH-string will be deleted.

  LEGEND
  Algorithm: bic = Bicubic, lag = Lagrange, dir = no interpolation 
  T = Bicubic-Tension, P = Interpolation Points

  " %}

  {% set m = pre + meshLiStr + suff %}

  {action_respond_info(m)}